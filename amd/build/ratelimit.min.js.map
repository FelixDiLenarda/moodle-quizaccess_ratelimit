{"version":3,"sources":["../src/ratelimit.js"],"names":["button","init","maxdelay","click","e","preventDefault","prop","Ajax","call","methodname","args","done","response","seconds","rand","Math","floor","random","delaySubmit","message","fail","Y","use","M","core_formchangechecker","set_form_submitted","submit","ModalFactory","create","body","then","modal","show","endTime","Date","now","buttonVal","val","checkSubmitCancelled","is","clearInterval","interval","clearTimeout","timeout","updateButtonValue","secsLeft","round","formatted","toString","padStart","setInterval","setTimeout"],"mappings":"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","sourcesContent":["/**\n * Quiz rate limiting JS code.\n *\n * @package quizaccess_ratelimit\n * @copyright 2021 Martin Gauk, TU Berlin <gauk@math.tu-berlin.de>\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\n\nconst form = '#mod_quiz_preflight_form';\nconst button = form + ' input#id_submitbutton';\n\nexport const init = (maxdelay) => {\n    $(button).click((e) => {\n        e.preventDefault();\n        $(button).prop(\"disabled\",true);\n        Ajax.call([{\n            methodname: 'quizaccess_ratelimit_get_waiting_time',\n            args: {},\n            done: (response) => {\n                if (response.seconds >= maxdelay) {\n                    // Spread the delay between 0 and maxdelay evenly.\n                    const rand = Math.floor(Math.random() * maxdelay);\n                    delaySubmit(rand, response.message);\n                } else {\n                    delaySubmit(response.seconds, response.message);\n                }\n            },\n            fail: () => {\n                // Do a random short delay.\n                const rand = Math.floor(Math.random() * 10);\n                delaySubmit(rand);\n            }\n        }]);\n    });\n};\n\nconst delaySubmit = function(seconds, message = '') {\n    Y.use('moodle-core-formchangechecker', function() {\n        M.core_formchangechecker.set_form_submitted();\n    });\n\n    if (seconds === 0) {\n        $(form).submit();\n        return;\n    }\n\n    // Tell the user what is happening when the delay is too long.\n    if (seconds > 10) {\n        ModalFactory.create({\n            body: message,\n        }).then(function(modal) {\n            modal.show();\n        });\n    }\n\n    const endTime = Date.now() + seconds * 1000;\n    const buttonVal = $(button).val();\n\n    const checkSubmitCancelled = () => {\n        // Submit is cancelled when the form is not visible, i.e. the modal was closed.\n        if ($(form).is(\":visible\")) {\n            return false;\n        }\n        clearInterval(interval);\n        clearTimeout(timeout);\n        $(button).prop(\"disabled\",false);\n        $(button).val(buttonVal);\n        return true;\n    };\n\n    const updateButtonValue = () => {\n        const secsLeft = Math.round((endTime - Date.now()) / 1000);\n        const formatted = Math.floor(secsLeft / 60).toString() + ':' +\n            (secsLeft % 60).toString().padStart(2, '0');\n        $(button).val(buttonVal + ' (' + formatted + ')');\n        checkSubmitCancelled();\n    };\n\n    updateButtonValue();\n    const interval = setInterval(updateButtonValue, 1000);\n\n    const timeout = setTimeout(() => {\n        clearInterval(interval);\n        if (!checkSubmitCancelled()) {\n            $(form).submit();\n        }\n    }, seconds * 1000);\n};\n"],"file":"ratelimit.min.js"}
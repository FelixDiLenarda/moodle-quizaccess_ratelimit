{"version":3,"file":"ratelimit.min.js","sources":["../src/ratelimit.js"],"sourcesContent":["/**\n * Quiz rate limiting JS code.\n *\n * @module    mod_quiz/add_question_modal_launcher\n * @copyright 2021 Martin Gauk, TU Berlin <gauk@math.tu-berlin.de>\n */\n\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport {markFormSubmitted} from 'core_form/changechecker';\n\nconst form = '#mod_quiz_preflight_form';\nconst button = form + ' input#id_submitbutton';\n\nexport const init = (maxDelay, popupRequired) => {\n    const maxDelayUntil = Date.now() + maxDelay * 1000;\n    const buttonElement = document.querySelector(button);\n    if (buttonElement) {\n        // Fügen Sie den Event Listener in der Capture-Phase hinzu\n        buttonElement.addEventListener('click', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            Ajax.call([{\n                methodname: 'quizaccess_ratelimit_get_waiting_time',\n                args: {},\n                done: (response) => {\n                    maxDelay = Math.floor((maxDelayUntil - Date.now()) / 1000);\n                    maxDelay = Math.max(0, maxDelay);\n                    if (response.seconds >= maxDelay) {\n                        // Spread the delay between 0 and maxdelay evenly.\n                        const rand = Math.floor(Math.random() * maxDelay);\n                        delaySubmit(rand, popupRequired, response.message);\n                    } else {\n                        delaySubmit(response.seconds, popupRequired, response.message);\n                    }\n                },\n                fail: () => {\n                    // Do a random short delay.\n                    const rand = Math.floor(Math.random() * 10);\n                    delaySubmit(rand, popupRequired);\n                }\n            }]);\n        }, true); // Der dritte Parameter `true` stellt sicher, dass der Event-Handler in der Capture-Phase ausgeführt wird.\n    }\n};\n\nconst delaySubmit = function(seconds, popupRequired, message = '') {\n    if (seconds === 0 ) {\n        submitForm();\n        return;\n    }\n\n    // Tell the user what is happening when the delay is too long.\n    if (seconds > 10) {\n        ModalFactory.create({\n            body: message,\n        }).then(\n            (modal) => modal.show()\n        ).catch(\n            () => null\n        );\n    }\n\n    const endTime = Date.now() + seconds * 1000;\n    const buttonVal = $(button).val();\n\n    const checkSubmitCancelled = () => {\n        // Submit is cancelled when the form is not visible, i.e. the modal was closed.\n        if ($(form).is(\":visible\")) {\n            return false;\n        }\n        clearInterval(interval);\n        clearTimeout(timeout);\n        $(button).prop(\"disabled\", false);\n        $(button).val(buttonVal);\n        return true;\n    };\n\n    const updateButtonValue = () => {\n        const secsLeft = Math.round((endTime - Date.now()) / 1000);\n        const formatted = Math.floor(secsLeft / 60).toString() + ':' +\n            (secsLeft % 60).toString().padStart(2, '0');\n        $(button).val(buttonVal + ' (' + formatted + ')');\n        checkSubmitCancelled();\n    };\n\n    updateButtonValue();\n    const interval = setInterval(updateButtonValue, 1000);\n\n    const timeout = setTimeout(() => {\n        clearInterval(interval);\n        if (!checkSubmitCancelled()) {\n            submitForm();\n        }\n    }, seconds * 1000);\n};\n\nconst submitForm = function() {\n    const formEl = document.querySelector(form);\n    markFormSubmitted(formEl);\n    formEl.submit();\n};"],"names":["form","button","maxDelay","popupRequired","maxDelayUntil","Date","now","buttonElement","document","querySelector","addEventListener","e","preventDefault","stopPropagation","call","methodname","args","done","response","Math","floor","max","seconds","rand","random","delaySubmit","message","fail","submitForm","create","body","then","modal","show","catch","endTime","buttonVal","val","checkSubmitCancelled","is","clearInterval","interval","clearTimeout","timeout","prop","updateButtonValue","secsLeft","round","formatted","toString","padStart","setInterval","setTimeout","formEl","submit"],"mappings":"+dAYMA,KAAO,2BACPC,OAASD,KAAO,uCAEF,CAACE,SAAUC,uBACrBC,cAAgBC,KAAKC,MAAmB,IAAXJ,SAC7BK,cAAgBC,SAASC,cAAcR,QACzCM,eAEAA,cAAcG,iBAAiB,SAAUC,IACrCA,EAAEC,iBACFD,EAAEE,gCACGC,KAAK,CAAC,CACPC,WAAY,wCACZC,KAAM,GACNC,KAAOC,cACHhB,SAAWiB,KAAKC,OAAOhB,cAAgBC,KAAKC,OAAS,KACrDJ,SAAWiB,KAAKE,IAAI,EAAGnB,UACnBgB,SAASI,SAAWpB,SAAU,OAExBqB,KAAOJ,KAAKC,MAAMD,KAAKK,SAAWtB,UACxCuB,YAAYF,KAAMpB,cAAee,SAASQ,cAE1CD,YAAYP,SAASI,QAASnB,cAAee,SAASQ,UAG9DC,KAAM,WAEIJ,KAAOJ,KAAKC,MAAsB,GAAhBD,KAAKK,UAC7BC,YAAYF,KAAMpB,sBAG3B,UAILsB,YAAc,SAASH,QAASnB,mBAAeuB,+DAAU,MAC3C,IAAZJ,oBACAM,aAKAN,QAAU,2BACGO,OAAO,CAChBC,KAAMJ,UACPK,MACEC,OAAUA,MAAMC,SACnBC,OACE,IAAM,aAIRC,QAAU9B,KAAKC,MAAkB,IAAVgB,QACvBc,WAAY,mBAAEnC,QAAQoC,MAEtBC,qBAAuB,MAErB,mBAAEtC,MAAMuC,GAAG,cAGfC,cAAcC,UACdC,aAAaC,6BACX1C,QAAQ2C,KAAK,YAAY,uBACzB3C,QAAQoC,IAAID,YACP,GAGLS,kBAAoB,WAChBC,SAAW3B,KAAK4B,OAAOZ,QAAU9B,KAAKC,OAAS,KAC/C0C,UAAY7B,KAAKC,MAAM0B,SAAW,IAAIG,WAAa,KACpDH,SAAW,IAAIG,WAAWC,SAAS,EAAG,yBACzCjD,QAAQoC,IAAID,UAAY,KAAOY,UAAY,KAC7CV,wBAGJO,0BACMJ,SAAWU,YAAYN,kBAAmB,KAE1CF,QAAUS,YAAW,KACvBZ,cAAcC,UACTH,wBACDV,eAEK,IAAVN,UAGDM,WAAa,iBACTyB,OAAS7C,SAASC,cAAcT,2CACpBqD,QAClBA,OAAOC"}